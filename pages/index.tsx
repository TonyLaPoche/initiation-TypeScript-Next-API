import type { GetStaticProps, NextPage } from 'next'
import Head from 'next/head'
import Link from 'next/link'
import Image from 'next/image'
import imageLoader from '../imagesLoader'
import styles from '../styles/Home.module.css'
import { Character, GetCharacterResults, Info } from '../types'
import { useState } from 'react'

const Home: NextPage<{ characters: Character[], info: Info }> = ({characters, info}) => {
  const [query, setQuery] = useState<string>('');
  const [result, setResult] = useState<Character[]>();
  const [infos, setInfos] = useState<Info>();
  const [call, setCall] = useState<string>('https://rickandmortyapi.com/api/character');

  // This function is called when the input changes
  const inputHandler = (event: React.ChangeEvent<HTMLInputElement>) => {
    const enteredName = event.target.value;
    setQuery(enteredName);
  };

  // This function is triggered when the Search buttion is clicked
  const search = () => {
    const foundItems = characters.filter((item) =>
      item.name.toLowerCase().includes(query.toLowerCase())
    );
    query != "" ? setResult(foundItems) : setResult(characters);
    setInfos(info);
  };
  
  return (
    <>
      <Head>
        <title>API Rick and Morty - tony</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={styles.main}>
        <h1>Api Rick and Morty</h1>
        <p>Like pokedex about the series</p>
        <div>
          <input 
            value={query}
            onChange={inputHandler}
            placeholder="Search.."
            className="input"
          />
          <button type='button' onClick={search}>Search</button>  
        </div>
        <div className="info">
          <p>Total pages found {info.pages}</p>
          <p>Total found {info.count}</p>
          <p>Result per page 20</p>
          <Link href={info.next}>
            <a>
              Next
            </a>
          </Link>
          {
            info.prev && <Link href={info.prev}>
              <a>
                Previous
              </a>
            </Link>
          }
        </div>
      </div>
      

      <div className={styles.container}>
        {
          result && result.map((character) => {
            return (
              <div key={character.id} className={styles.card}>
                <Link href={`/characters/${character.id}`} className={styles.title}>
                  <a>
                    <h3>
                      {character.name}
                    </h3>
                    <Image
                      loader={imageLoader}
                      unoptimized
                      src={character.image}
                      alt={character.name}
                      width="200"
                      height="200"
                    />
                  </a>
                </Link>
              </div>
            )
          })
        }
        {
          !result && characters.map((character) => {
            return (
              <div key={character.id} className={styles.card}>
                <Link href={`/characters/${character.id}`} className={styles.title}>
                  <a>
                    <h3>
                      {character.name}
                    </h3>
                    <Image
                      loader={imageLoader}
                      unoptimized
                      src={character.image}
                      alt={character.name}
                      width="200"
                      height="200"
                    />
                  </a>
                </Link>
              </div>
            )
          })
        }
      </div>
    </>
  )
}

export const getStaticProps: GetStaticProps = async (context) =>{  
  console.log('context log : ', context.params);
  
  const res = await fetch("https://rickandmortyapi.com/api/character");
  const { results, info }: GetCharacterResults = await res.json();
  
  return {
    props:{
      characters: results,
      info: info,
    },
  };
};

export default Home
